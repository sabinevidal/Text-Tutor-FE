{"ast":null,"code":"var _jsxFileName = \"/Users/sabinevidal/Documents/Udacity/Text-Tutor/frontend/src/components/TutorFormView.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport '../stylesheets/TutorFormView.css';\n\nclass TutorFormView extends Component {\n  constructor(props) {\n    super();\n\n    this.submitTutor = event => {\n      event.preventDefault();\n      $.ajax({\n        url: '/api/tutors',\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          name: this.state.name,\n          phone: this.state.phone,\n          email: this.state.email,\n          classes: this.state.classes\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          document.getElementById(\"add-tutor-form\").reset();\n          return;\n        },\n        error: error => {\n          alert('Unable to add tutor. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.getSubjects = input => {\n      return this.props.subjects.then(response => {\n        return response.json();\n      }).then(json => {\n        return {\n          objects: json\n        };\n      });\n    };\n\n    this.handleChange = event => {\n      let name = event.target.name;\n      let value = event.target.value;\n\n      if (name === 'phone') {\n        if (!Number(value)) {\n          alert(\"Your phone must be a number\");\n        }\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      phone: null,\n      email: \"\",\n      classes: {},\n      subjects: {}\n    };\n  }\n\n  componentDidMount() {\n    $.ajax({\n      url: `/api/subjects`,\n      type: \"GET\",\n      success: result => {\n        this.setState({\n          subjects: result.subjects\n        });\n        return;\n      },\n      error: error => {\n        alert('Unable to load subjects. Please try your request again');\n        return;\n      }\n    });\n  }\n\n  render() {\n    const items = this.state.subjects;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"add-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"Add a New Tutor\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-view\",\n      id: \"add-tutor-form\",\n      onSubmit: this.submitTutor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"Name\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Phone\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phone\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, \"Subjects\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"classes\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, Object.values(this.state.subjects).map(id => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: id,\n        value: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, this.state.subjects[id]);\n    }))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default TutorFormView;","map":{"version":3,"sources":["/Users/sabinevidal/Documents/Udacity/Text-Tutor/frontend/src/components/TutorFormView.js"],"names":["React","Component","$","TutorFormView","constructor","props","submitTutor","event","preventDefault","ajax","url","type","dataType","contentType","data","JSON","stringify","name","state","phone","email","classes","xhrFields","withCredentials","crossDomain","success","result","document","getElementById","reset","error","alert","getSubjects","input","subjects","then","response","json","objects","handleChange","target","value","Number","setState","componentDidMount","render","items","Object","values","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,kCAAP;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AACpCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB;;AADgB,SA2BlBC,WA3BkB,GA2BHC,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACAN,MAAAA,CAAC,CAACO,IAAF,CAAO;AACLC,QAAAA,GAAG,EAAE,aADA;AAELC,QAAAA,IAAI,EAAE,MAFD;AAGLC,QAAAA,QAAQ,EAAE,MAHL;AAILC,QAAAA,WAAW,EAAE,kBAJR;AAKLC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADE;AAEnBE,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAFC;AAGnBC,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAHC;AAInBC,UAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG;AAJD,SAAf,CALD;AAWLC,QAAAA,SAAS,EAAE;AACTC,UAAAA,eAAe,EAAE;AADR,SAXN;AAcLC,QAAAA,WAAW,EAAE,IAdR;AAeLC,QAAAA,OAAO,EAAGC,MAAD,IAAY;AACnBC,UAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,KAA1C;AACA;AACD,SAlBI;AAmBLC,QAAAA,KAAK,EAAGA,KAAD,IAAW;AAChBC,UAAAA,KAAK,CAAC,oDAAD,CAAL;AACA;AACD;AAtBI,OAAP;AAwBD,KArDiB;;AAAA,SAuDlBC,WAvDkB,GAuDHC,KAAD,IAAW;AACvB,aAAO,KAAK5B,KAAL,CAAW6B,QAAX,CACJC,IADI,CACEC,QAAD,IAAc;AAClB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHI,EAGFF,IAHE,CAGIE,IAAD,IAAU;AAChB,eAAO;AAAEC,UAAAA,OAAO,EAAED;AAAX,SAAP;AACD,OALI,CAAP;AAMD,KA9DiB;;AAAA,SA4ElBE,YA5EkB,GA4EFhC,KAAD,IAAW;AACxB,UAAIU,IAAI,GAAGV,KAAK,CAACiC,MAAN,CAAavB,IAAxB;AACA,UAAIwB,KAAK,GAAGlC,KAAK,CAACiC,MAAN,CAAaC,KAAzB;;AACA,UAAIxB,IAAI,KAAK,OAAb,EAAsB;AACpB,YAAI,CAACyB,MAAM,CAACD,KAAD,CAAX,EAAoB;AAClBV,UAAAA,KAAK,CAAC,6BAAD,CAAL;AACD;AACF;;AACD,WAAKY,QAAL,CAAc;AAAC,SAAC1B,IAAD,GAAQwB;AAAT,OAAd;AACD,KArFiB;;AAEhB,SAAKvB,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAE,EADK;AAEXE,MAAAA,KAAK,EAAE,IAFI;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,OAAO,EAAE,EAJE;AAKXa,MAAAA,QAAQ,EAAE;AALC,KAAb;AAOD;;AAEDU,EAAAA,iBAAiB,GAAE;AACjB1C,IAAAA,CAAC,CAACO,IAAF,CAAO;AACLC,MAAAA,GAAG,EAAG,eADD;AAELC,MAAAA,IAAI,EAAE,KAFD;AAGLc,MAAAA,OAAO,EAAGC,MAAD,IAAY;AACnB,aAAKiB,QAAL,CAAc;AAAET,UAAAA,QAAQ,EAAER,MAAM,CAACQ;AAAnB,SAAd;AACA;AACD,OANI;AAOLJ,MAAAA,KAAK,EAAGA,KAAD,IAAW;AAChBC,QAAAA,KAAK,CAAC,wDAAD,CAAL;AACA;AACD;AAVI,KAAP;AAYD;;AA+DDc,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAK5B,KAAL,CAAWgB,QAAzB;AACA,wBACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,EAAE,EAAC,gBAA/B;AAAgD,MAAA,QAAQ,EAAE,KAAK5B,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,QAAQ,EAAE,KAAKiC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,QAAQ,EAAE,KAAKA,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,QAAQ,EAAE,KAAKA,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CATF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEE;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAE,KAAKA,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,MAAM,CAACC,MAAP,CAAc,KAAK9B,KAAL,CAAWgB,QAAzB,EAAmCe,GAAnC,CAAuCC,EAAE,IAAI;AAC1C,0BACE;AAAQ,QAAA,GAAG,EAAEA,EAAb;AAAiB,QAAA,KAAK,EAAEA,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKhC,KAAL,CAAWgB,QAAX,CAAoBgB,EAApB,CAA7B,CADF;AAGD,KAJF,CADH,CAFF,CAbF,eAuBE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,QAA/B;AAAwC,MAAA,KAAK,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CAFF,CADF;AA8BD;;AAxHmC;;AA2HtC,eAAe/C,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\n\nimport '../stylesheets/TutorFormView.css';\n\nclass TutorFormView extends Component {\n  constructor(props){\n    super();\n    this.state = {\n      name: \"\",\n      phone: null,\n      email: \"\",\n      classes: {},\n      subjects: {}\n    }\n  }\n\n  componentDidMount(){\n    $.ajax({\n      url: `/api/subjects`,\n      type: \"GET\",\n      success: (result) => {\n        this.setState({ subjects: result.subjects })\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load subjects. Please try your request again')\n        return;\n      }\n    })\n  }\n\n\n  submitTutor = (event) => {\n    event.preventDefault();\n    $.ajax({\n      url: '/api/tutors',\n      type: \"POST\",\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        name: this.state.name,\n        phone: this.state.phone,\n        email: this.state.email,\n        classes: this.state.classes\n      }),\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      success: (result) => {\n        document.getElementById(\"add-tutor-form\").reset();\n        return;\n      },\n      error: (error) => {\n        alert('Unable to add tutor. Please try your request again')\n        return;\n      }\n    })\n  }\n\n  getSubjects = (input) => {\n    return this.props.subjects\n      .then((response) => {\n        return response.json();\n      }).then((json) => {\n        return { objects: json };\n      });\n  }\n\n  // renderFields() {\n  //   return _.map(formField, ({ label, name}) => (\n  //     <Field\n  //       key={id}\n  //       component={SubjectView}\n  //       type=\"text\"\n  //       label={label}\n  //       name={name}\n  //       />\n  //   ));\n  // }\n\n  handleChange = (event) => {\n    let name = event.target.name;\n    let value = event.target.value;\n    if (name === 'phone') {\n      if (!Number(value)) {\n        alert(\"Your phone must be a number\")\n      }\n    }\n    this.setState({[name]: value})\n  }\n\n  render() {\n    const items = this.state.subjects;\n    return (\n      <div id=\"add-form\">\n        <h2>Add a New Tutor</h2>\n        <form className=\"form-view\" id=\"add-tutor-form\" onSubmit={this.submitTutor}>\n          <label>\n            Name\n            <input type=\"text\" name=\"name\" onChange={this.handleChange}/>\n          </label>\n          <label>\n            Phone\n            <input type=\"text\" name=\"phone\" onChange={this.handleChange}/>\n          </label>\n          <label>\n            Email\n            <input type=\"text\" name=\"email\" onChange={this.handleChange}/>\n          </label>\n          <label>\n            Subjects\n            <select name=\"classes\" onChange={this.handleChange}>\n              {Object.values(this.state.subjects).map(id => {\n                  return (\n                    <option key={id} value={id}>{this.state.subjects[id]}</option>\n                  )\n                })}\n            </select>\n          </label>\n          <input type=\"submit\" className=\"button\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default TutorFormView;\n"]},"metadata":{},"sourceType":"module"}