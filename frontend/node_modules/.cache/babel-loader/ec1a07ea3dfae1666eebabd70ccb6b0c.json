{"ast":null,"code":"var _jsxFileName = \"/Users/sabinevidal/Documents/Udacity/Text-Tutor/frontend/src/components/TutorFormView.js\";\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport { availableClasses } from '../api.js';\nimport $ from 'jquery';\nimport axios from 'axios';\nimport '../stylesheets/TutorFormView.css';\n\nclass TutorFormView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitTutor = event => {\n      event.preventDefault();\n      $.ajax({\n        url: '/api/tutors',\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          name: this.state.name,\n          phone: this.state.phone,\n          email: this.state.email,\n          classes: this.state.classes\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          document.getElementById(\"add-tutor-form\").reset();\n          return;\n        },\n        error: error => {\n          alert('Unable to add tutor. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      let name = event.target.name;\n      let value = event.target.value;\n\n      if (name === 'phone') {\n        if (!Number(value)) {\n          alert(\"Your phone must be a number\");\n        }\n      }\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      phone: null,\n      email: \"\",\n      classes: \"\",\n      subjects: []\n    };\n  }\n\n  componentDidMount() {\n    // $.ajax({\n    //   url: `/api/subjects`,\n    //   type: \"GET\",\n    //   success: (result) => {\n    //     this.setState({ subjects: result.subjects })\n    //     return { value: subject.grade, label: subject.name };\n    //   },\n    //   error: (error) => {\n    //     alert('Unable to load subjects. Please try your request again')\n    //     return;\n    //   }\n    // });\n    // availableClasses()\n    //   .then(response => {\n    //     this.setState({\n    //       subjects: response.Subject\n    //     })\n    //     console.log(\"hello\", this.state.subjects)\n    //   });\n    // axios.get(`/api/subjects`)\n    //   .then(res => {\n    //     const subjects = res.data;\n    //     this.setState({subjects: subjects.subject})\n    //     console.log(this.state.subjects)\n    //     return { value: subject.grade, label: subject.name };\n    //   })\n    fetch(`/api/subjects`).then(response => response.json()).then(json => this.setState({\n      subjects: json.data\n    }));\n  }\n\n  // TODO: carry on looking at\n  // https://stackoverflow.com/questions/47672117/react-select-how-to-show-iterate-through-data-from-api-call-in-option-instea\n  render() {\n    let classes = this.state.subjects.map((c, i) => key = {\n      i\n    }, value = {\n      c\n    }); // return { value: subject.grade, label: subject.name };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"add-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, \"Add a New Tutor\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form-view\",\n      id: \"add-tutor-form\",\n      onSubmit: this.submitTutor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, \"Name\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, \"Phone\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"phone\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, \"Subjects\", /*#__PURE__*/React.createElement(Select, {\n      options: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"button\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default TutorFormView;","map":{"version":3,"sources":["/Users/sabinevidal/Documents/Udacity/Text-Tutor/frontend/src/components/TutorFormView.js"],"names":["React","Component","Select","availableClasses","$","axios","TutorFormView","constructor","props","submitTutor","event","preventDefault","ajax","url","type","dataType","contentType","data","JSON","stringify","name","state","phone","email","classes","xhrFields","withCredentials","crossDomain","success","result","document","getElementById","reset","error","alert","handleChange","target","value","Number","setState","subjects","componentDidMount","fetch","then","response","json","render","map","c","i","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,gBAAR,QAA+B,WAA/B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAmB,OAAnB;AAEA,OAAO,kCAAP;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AACpCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SA4ClBC,WA5CkB,GA4CHC,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACC,cAAN;AACAP,MAAAA,CAAC,CAACQ,IAAF,CAAO;AACLC,QAAAA,GAAG,EAAE,aADA;AAELC,QAAAA,IAAI,EAAE,MAFD;AAGLC,QAAAA,QAAQ,EAAE,MAHL;AAILC,QAAAA,WAAW,EAAE,kBAJR;AAKLC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADE;AAEnBE,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAFC;AAGnBC,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAHC;AAInBC,UAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG;AAJD,SAAf,CALD;AAWLC,QAAAA,SAAS,EAAE;AACTC,UAAAA,eAAe,EAAE;AADR,SAXN;AAcLC,QAAAA,WAAW,EAAE,IAdR;AAeLC,QAAAA,OAAO,EAAGC,MAAD,IAAY;AACnBC,UAAAA,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,EAA0CC,KAA1C;AACA;AACD,SAlBI;AAmBLC,QAAAA,KAAK,EAAGA,KAAD,IAAW;AAChBC,UAAAA,KAAK,CAAC,oDAAD,CAAL;AACA;AACD;AAtBI,OAAP;AAwBD,KAtEiB;;AAAA,SA+FlBC,YA/FkB,GA+FFzB,KAAD,IAAW;AACxB,UAAIU,IAAI,GAAGV,KAAK,CAAC0B,MAAN,CAAahB,IAAxB;AACA,UAAIiB,KAAK,GAAG3B,KAAK,CAAC0B,MAAN,CAAaC,KAAzB;;AACA,UAAIjB,IAAI,KAAK,OAAb,EAAsB;AACpB,YAAI,CAACkB,MAAM,CAACD,KAAD,CAAX,EAAoB;AAClBH,UAAAA,KAAK,CAAC,6BAAD,CAAL;AACD;AACF;;AACD,WAAKK,QAAL,CAAc;AAAC,SAACnB,IAAD,GAAQiB;AAAT,OAAd;AACD,KAxGiB;;AAEhB,SAAKhB,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAE,EADK;AAEXE,MAAAA,KAAK,EAAE,IAFI;AAGXC,MAAAA,KAAK,EAAE,EAHI;AAIXC,MAAAA,OAAO,EAAE,EAJE;AAKXgB,MAAAA,QAAQ,EAAE;AALC,KAAb;AAOD;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,KAAK,CAAE,eAAF,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQE,IAAI,IAAI,KAAKN,QAAL,CAAc;AAAEC,MAAAA,QAAQ,EAAEK,IAAI,CAAC5B;AAAjB,KAAd,CAFhB;AAGD;;AAgED;AACA;AAEA6B,EAAAA,MAAM,GAAG;AACP,QAAItB,OAAO,GAAG,KAAKH,KAAL,CAAWmB,QAAX,CAAoBO,GAApB,CAAwB,CAACC,CAAD,EAAIC,CAAJ,KAAUC,GAAG,GAAC;AAACD,MAAAA;AAAD,KAAtC,EAA2CZ,KAAK,GAAC;AAACW,MAAAA;AAAD,KAAjD,CAAd,CADO,CAEL;;AAEF,wBACE;AAAK,MAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAA4B,MAAA,EAAE,EAAC,gBAA/B;AAAgD,MAAA,QAAQ,EAAE,KAAKvC,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,QAAQ,EAAE,KAAK0B,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,QAAQ,EAAE,KAAKA,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAgC,MAAA,QAAQ,EAAE,KAAKA,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CATF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCASE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEX,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CAbF,eAwBE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAC,QAA/B;AAAwC,MAAA,KAAK,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,CAFF,CADF;AA+BD;;AAhJmC;;AAmJtC,eAAelB,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport Select from 'react-select';\nimport {availableClasses} from '../api.js';\nimport $ from 'jquery';\nimport axios  from 'axios';\n\nimport '../stylesheets/TutorFormView.css';\n\nclass TutorFormView extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      name: \"\",\n      phone: null,\n      email: \"\",\n      classes: \"\",\n      subjects: [],\n    }\n  }\n\n  componentDidMount(){\n    // $.ajax({\n    //   url: `/api/subjects`,\n    //   type: \"GET\",\n    //   success: (result) => {\n    //     this.setState({ subjects: result.subjects })\n    //     return { value: subject.grade, label: subject.name };\n    //   },\n    //   error: (error) => {\n    //     alert('Unable to load subjects. Please try your request again')\n    //     return;\n    //   }\n    // });\n    // availableClasses()\n    //   .then(response => {\n    //     this.setState({\n    //       subjects: response.Subject\n    //     })\n    //     console.log(\"hello\", this.state.subjects)\n    //   });\n    // axios.get(`/api/subjects`)\n    //   .then(res => {\n    //     const subjects = res.data;\n    //     this.setState({subjects: subjects.subject})\n    //     console.log(this.state.subjects)\n    //     return { value: subject.grade, label: subject.name };\n    //   })\n    fetch(`/api/subjects`)\n      .then(response => response.json())\n      .then(json => this.setState({ subjects: json.data }));\n  }\n\n\n  submitTutor = (event) => {\n    event.preventDefault();\n    $.ajax({\n      url: '/api/tutors',\n      type: \"POST\",\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({\n        name: this.state.name,\n        phone: this.state.phone,\n        email: this.state.email,\n        classes: this.state.classes\n      }),\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      success: (result) => {\n        document.getElementById(\"add-tutor-form\").reset();\n        return;\n      },\n      error: (error) => {\n        alert('Unable to add tutor. Please try your request again')\n        return;\n      }\n    })\n  }\n\n  // getSubjects = (input) => {\n  //   return this.props.subjects\n  //     .then((response) => {\n  //       return response.json();\n  //     }).then((json) => {\n  //       return { objects: json };\n  //     });\n  // }\n\n  // renderFields() {\n  //   return _.map(formField, ({ label, name}) => (\n  //     <Field\n  //       key={id}\n  //       component={SubjectView}\n  //       type=\"text\"\n  //       label={label}\n  //       name={name}\n  //       />\n  //   ));\n  // }\n\n  // let printClasses = arrayOfClasses.map(opt => ({ label: opt, value: opt }));\n\n  handleChange = (event) => {\n    let name = event.target.name;\n    let value = event.target.value;\n    if (name === 'phone') {\n      if (!Number(value)) {\n        alert(\"Your phone must be a number\")\n      }\n    }\n    this.setState({[name]: value})\n  }\n  // TODO: carry on looking at\n  // https://stackoverflow.com/questions/47672117/react-select-how-to-show-iterate-through-data-from-api-call-in-option-instea\n\n  render() {\n    let classes = this.state.subjects.map((c, i) => key={i}, value={c});\n      // return { value: subject.grade, label: subject.name };\n    \n    return (\n      <div id=\"add-form\">\n        <h2>Add a New Tutor</h2>\n        <form className=\"form-view\" id=\"add-tutor-form\" onSubmit={this.submitTutor}>\n          <label>\n            Name\n            <input type=\"text\" name=\"name\" onChange={this.handleChange}/>\n          </label>\n          <label>\n            Phone\n            <input type=\"text\" name=\"phone\" onChange={this.handleChange}/>\n          </label>\n          <label>\n            Email\n            <input type=\"text\" name=\"email\" onChange={this.handleChange}/>\n          </label>\n          <label>\n            Subjects\n            {/* <select name=\"classes\" onChange={this.handleChange}>\n              {Object.values(this.state.subjects).map(id => {\n                  return (\n                    <option key={id} value={id}>{this.state.subjects[id]}</option>\n                  )\n                })}\n            </select> */}\n            <Select options={classes} />\n          </label>\n          <input type=\"submit\" className=\"button\" value=\"Submit\" />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default TutorFormView;\n"]},"metadata":{},"sourceType":"module"}